esphome:
  name: cerberus
  includes:
    - cerberus/esphome/include
    - cerberus/esphome/src

custom_component:
- id: cerberus
  lambda: |-
    auto cerberus = new Cerberus();
    return {cerberus};

button:
  - platform: template
    name: Open Door
    id: cerberus_open_door
    icon: "mdi:key"
    on_press:
      then:
        lambda: getCerberus(cerberus)->onOpenDoor();

switch:
  - platform: template
    name: Party Mode
    id: cerberus_party_mode
    icon: "mdi:gift"
    lambda: |-
      return getCerberus(cerberus)->partyMode;
    turn_on_action:
      then:
        lambda: getCerberus(cerberus)->partyMode = true;
    turn_off_action:
      then:
        lambda: getCerberus(cerberus)->partyMode = false;

binary_sensor:
  - platform: custom
    lambda: |-
      return {
        getCerberus(cerberus)->ringingDownstairsSensor,
        getCerberus(cerberus)->ringingUpstairsSensor,
        getCerberus(cerberus)->cancelVoiceControlSequenceSensor,
        getCerberus(cerberus)->cancelControlSequenceSensor,
        getCerberus(cerberus)->cancelRingControlSequenceSensor,
        getCerberus(cerberus)->controlSequenceSensor
      };
    binary_sensors:
      - name: "Ringing Downstairs"
        id: cerberus_ringing_downstairs
      - name: "Ringing Upstairs"
        id: cerberus_ringing_upstairs
      - name: "Cancel Voice Control Sequence"
        id: cerberus_cancel_voice_control_sequence
      - name: "Cancel Control Sequence"
        id: cerberus_cancel_control_sequence
      - name: "Cancel Ring Control Sequence"
        id: cerberus_cancel_ring_control_sequence
      - name: "Control Sequence"
        id: cerberus_control_sequence

esp8266:
  board: esp01_1m

logger:

api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-03Edeb"
    password: "sp9GO5BhJkt6"

  use_address: "192.168.1.67"

captive_portal: